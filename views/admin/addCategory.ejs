<%- include('../layouts/adminHeader') %>

    <main class="main-content container-fluid">
        <div class="row justify-content-center">
            <div class="col-12 col-sm-10 col-md-8 col-lg-6 bg-white mt-5">
                <h2 class="mt-3">ADD CATEGORY</h2>

                <% if(typeof error!=='undefined' ){ %>

                    <h6 id="errorMessage" style="color: red;" style="justify-content: center; text-align: center;">
                        <%= error %>
                            <%}%>



                                <form action="/admin/addcategory" method="post" enctype="multipart/form-data">
                                    <div class="mb-3">
                                        <label for="catName" class="form-label">Category Name</label>
                                        <input type="text" class="form-control" id="catName" name="catName"
                                            placeholder="Enter category name" required  required
                                            pattern="[a-zA-Z]+( [a-zA-Z]+)*" title="Alphabets allowed with spaces between">
                                    </div>

                                    <div class="mb-3">
                                        <label for="description" class="form-label">Category Description</label>
                                        <textarea class="form-control" id="description" name="description"
                                            placeholder="Enter category description" rows="3" required pattern=".{1,}"></textarea>
                                          <!-- <textarea class="form-control" id="description" name="description" placeholder="Enter category description" rows="3" required></textarea> -->
                                    </div>

                                    <div class="mb-3">
                                        <div class="d-flex justify-content-center" style="width: 800px;">
                                            <div class="d-flex justify-content-evenly">
                                                <div class="image-upload-container">
                                                    <div class="close-icon" onclick="deleteImage('image1', 'preview1');">&times;
                                                    </div>
                                                    <label for="image1" class="form-label">
                                                        <img id="preview1" src="https://bit.ly/3ubuq5o" alt="">
                                                    </label>
                                                    <input type="file" class="form-control" id="image1" name="cropImages"
                                                        style="display: none;">
                                                    <button type="button" onclick="document.getElementById('image1').click();">Upload
                                                        Image</button>
                                                </div>
                    
                                    </div>
<br><br>
                                    <button type="submit" class="btn btn-primary">Add Category</button>
                                </form>
                                <br><br>
                                <a href="allCategory">back to all categories</a>
                                <br>
            </div>
        </div>

    </main>

    <div class="modal fade" id="imageCropModal" tabindex="-1" aria-labelledby="imageCropModalLabel"
            aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="imageCropModalLabel">Crop Image</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <img id="imageToCrop" src="" alt="Crop this image" style="max-width: 100%;">
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" id="cropImageBtn">Crop</button>
                    </div>
                </div>
            </div>
        </div>

    <br><br>
    <%- include('../layouts/adminFooter') %>

        <script>

let currentInputId, currentPreviewId, cropper;
            let croppedImages = {};
            let originalFileNames = {};


            document.addEventListener("DOMContentLoaded", function () {

                document.getElementById('image1').addEventListener('change', function () { prepareImageForCropping('image1', 'preview1'); });


                document.getElementById('cropImageBtn').addEventListener('click', function () {
                    performCropping();
                });


                $('#imageCropModal').on('shown.bs.modal', function () {
                    let image = document.getElementById('imageToCrop');
                    cropper = new Cropper(image, {
                        aspectRatio: 1,
                        viewMode: 1,
                        dragMode: "move",
                        minContainerWidth: 450,
                        minContainerHeight: 500,
                        minCropBoxWidth: 400,
                        minCropBoxHeight: 400,
                        minCanvasHeight: 500,
                        minCanvasWidth: 500,

                    });
                });


                $('#imageCropModal').on('hidden.bs.modal', function () {
                    if (cropper) {
                        cropper.destroy();
                        cropper = null;
                    }
                });
            });

            function prepareImageForCropping(inputId, previewId) {
                currentInputId = inputId;
                currentPreviewId = previewId;
                const input = document.getElementById(inputId);
                const file = input.files[0];
                originalFileNames[inputId] = file.name;

                const reader = new FileReader();
                reader.onload = function (e) {
                    document.getElementById('imageToCrop').src = e.target.result;
                    $('#imageCropModal').modal('show');
                };
                reader.readAsDataURL(file);
            }


            function performCropping() {
                if (!cropper) {
                    console.error("Cropper is not initialized.");
                    return;
                }
                cropper.getCroppedCanvas().toBlob((blob) => {

                    const preview = document.getElementById(currentPreviewId);
                    preview.src = URL.createObjectURL(blob);

                    croppedImages[currentInputId] = blob;


                    $('#imageCropModal').modal('hide');
                }, 'image/png')


            }


            document.addEventListener('DOMContentLoaded', function () {
                const form = document.querySelector('form')
                console.log('form ',form);
                form.addEventListener('submit', function (e) {
                    e.preventDefault()
                    const productName = document.getElementById('productName').value
                    const price = document.getElementById('price').value
                    const color = document.getElementById('color').value
                    const quantity = document.getElementById('quantity').value
                    const formdescription = document.getElementById('formdescription').value
                    const categoryId=document.getElementById('categoryId').value

                    // const image1 = document.getElementById('image1').file[0]
                    // const image2 = document.getElementById('image2').file[0]
                    // const image3 = document.getElementById('image3').file[0]
                    // const image4 = document.getElementById('image4').file[0]

                    const formData = new FormData();
                    formData.append('productName', productName)
                    formData.append('price', price)
                    formData.append('color', color)
                    formData.append('quantity', quantity)
                    formData.append('formdescription', formdescription)
                    formData.append('categoryId',categoryId)  

                    Object.keys(croppedImages).forEach(key => {
                        const originalFileName = originalFileNames[key]
                        formData.append('cropImages', croppedImages[key], originalFileName)

                    })

                    axios.post('/admin/category', formData, {

                        headers: {
                            'content-type': 'multipart/form-data'
                        }

                    }).then((res) => {
                        console.log("res",res);
                            if(res.data.success){
                                console.log("response here");
                                window.location.href='/admin/allcategory'
                            }else{
                                document.getElementById('addproductError').innerHTML=res.data.message
                                document.getElementById('addproductError').style.color='red'
                            }
                        })
                        .catch(err=>{
                            console.log('axios error',err);
                        })
                })
            })
        </script>